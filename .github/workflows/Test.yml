name: Test

on:
    push:
    pull_request:
    workflow_dispatch:
    schedule:
      - cron: '0 15 * * *'

env:
  CI: true

jobs:


#  lin-docker-pytest:
#    runs-on: ubuntu-latest
#    strategy:
#      fail-fast: false
#      max-parallel: 8
#      matrix:
#        pkg: [
#          'mcode',
#          'llvm',
#          'gcc',
#        ]
#    name: '🛳️ Docker · ghdl/vunit:${{ matrix.pkg }}-master'
#    env:
#      DOCKER_BUILDKIT: 1
#    steps:
#
#    - name: '🧰 Checkout'
#      uses: actions/checkout@v2
#
#    - name: Build test image
#      run: |
#        docker build -t ghdl/test:extended - <<EOF
#        FROM ghdl/vunit:${{ matrix.pkg }}-master
#        RUN apt update -qq \
#         && apt install -y python3-pip \
#         && python3 -m pip install pytest
#        EOF
#
#    - run: docker run --rm -v $(pwd):/src -w /src -e CI ghdl/test:extended python3 -m pytest -v -s -ra test.py --color=yes
#
#
#  lin-setup-pytest:
#    runs-on: ubuntu-latest
#    name: '🐧 Ubuntu'
#    steps:
#
#    - name: '🧰 Checkout'
#      uses: actions/checkout@v2
#
#    - name: '⚙️ Setup GHDL'
#      uses: ghdl/setup-ghdl-ci@master
#      with:
#        backend: llvm
#
#    - name: '🐍 Setup Python'
#      uses: actions/setup-python@v2
#      with:
#        python-version: 3.8
#
#    - name: Install dependencies
#      run: python -m pip install --progress-bar off pytest
#
#    - run: python -m pytest -v -s -ra test.py --color=yes
#
#
#  win-setup-pytest:
#    runs-on: windows-latest
#    strategy:
#      fail-fast: false
#      max-parallel: 8
#      matrix:
#        include: [
#          {icon: '🟦', installs: 'MINGW32', arch: i686,   pkg: 'mcode' },
#          #{icon: '🟦', installs: "MINGW32", arch: i686,   pkg: "llvm"  }, ! Not yet functional
#          #{icon: '🟪', installs: "MINGW64", arch: x86_64, pkg: "mcode" }, ! mcode is not yet supported on win64
#          {icon: '🟪', installs: 'MINGW64', arch: x86_64, pkg: 'llvm'  },
#        ]
#    name: '${{ matrix.icon }} Test · ${{ matrix.installs }} · ${{ matrix.pkg }}'
#    defaults:
#      run:
#        shell: msys2 {0}
#    steps:
#
#    - name: '${{ matrix.icon }} Setup MSYS2'
#      uses: msys2/setup-msys2@v2
#      with:
#        msystem: ${{ matrix.installs }}
#        update: true
#        install: >
#          mingw-w64-${{ matrix.arch }}-python-pip
#          mingw-w64-${{ matrix.arch }}-python-pytest
#
#    - name: '🧰 Checkout'
#      uses: actions/checkout@v2
#
#    - name: '⚙️ Setup GHDL'
#      uses: ghdl/setup-ghdl-ci@master
#      with:
#        backend: ${{ matrix.pkg }}
#
#    - run: python -m pytest -v -s -ra test.py --color=yes

  lin-setup-verification:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      max-parallel: 8
      matrix:
        backend: [
          mcode,
          llvm,
          gcc
        ]
        project: [
          OSVVM,
          UVVM
        ]
    name: '🐧 ${{ matrix.project }} · bash · ${{ matrix.backend }}'
    steps:

    - name: '🧰 Checkout'
      uses: actions/checkout@v2

    - name: '⚙️ Setup GHDL'
      uses: ghdl/setup-ghdl-ci@master
      with:
        backend: ${{ matrix.backend }}

    - run: ./verification/${{ matrix.project }}/run.sh


  win-verification:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      max-parallel: 8
      matrix:
        sys: [
          {icon: '🟦', installs: 'MINGW32', arch: i686,   pkg: 'mcode' },
          #{icon: '🟦', installs: "MINGW32", arch: i686,   pkg: "llvm"  }, ! Not yet functional
          #{icon: '🟪', installs: "MINGW64", arch: x86_64, pkg: "mcode" }, ! mcode is not yet supported on win64
          {icon: '🟪', installs: 'MINGW64', arch: x86_64, pkg: 'llvm'  },
        ]
        project: [
          OSVVM,
          UVVM
        ]
        shell: [
          msys2,
          psh
        ]
    name: '${{ matrix.sys.icon }} ${{ matrix.project }} · ${{ matrix.shell }} · ${{ matrix.sys.installs }} ${{ matrix.sys.pkg }}'
    defaults:
      run:
        shell: msys2 {0}
    steps:

    - name: '${{ matrix.sys.icon }} Setup MSYS2'
      uses: msys2/setup-msys2@v2
      with:
        msystem: ${{ matrix.sys.installs }}
        update: true
        install: git

    - name: '🧰 Checkout'
      uses: actions/checkout@v2

    - name: '⚙️ Setup GHDL'
      uses: ghdl/setup-ghdl-ci@master
      with:
        backend: ${{ matrix.sys.pkg }}

    - name: '${{ matrix.sys.icon }} Compile ${{ matrix.project }}'
      if: matrix.shell == 'msys2'
      run: ./verification/${{ matrix.project }}/run.sh

    - name: Compile ${{ matrix.project }}
      if: matrix.shell == 'psh'
      shell: powershell
      run: verification\${{ matrix.project }}\run.ps1
